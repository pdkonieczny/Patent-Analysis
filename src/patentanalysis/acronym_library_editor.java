/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * acronym_library_editor.java
 *
 * Created on Jan 25, 2012, 9:49:48 PM
 */
package patentanalysis;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;

/**
 *
 * @author Philip Konieczny
 */
public class acronym_library_editor extends javax.swing.JFrame {
    public boolean closed;
    /** Creates new form acronym_library_editor */
    public acronym_library_editor() {
        initComponents();
        closed=false;                     
        //model for table displaying list
        DefaultTableModel model= new javax.swing.table.DefaultTableModel(
            new Object [][] {
                
            },
            new String [] {
                "Acronym", "Meaning"
            }
        ){  //only allow meaning to be edited
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        
        //only allow meaning field to be resizable
        jTable1.setModel(model); 
        jTable1.getColumnModel().getColumn(0).setMinWidth(75);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(75);
            
            //read in acronym library to table
            BufferedReader br3;
            try{
                br3 = new BufferedReader(new FileReader(System.getProperty("user.dir")+"\\"+"acronym_lib.txt"));
                String s3="";
                while((s3=br3.readLine())!=null){
                    String[] parts = s3.split(":");
                    if(!s3.equals("")){
                        model.addRow(new Object[]{parts[0],parts[1]} );
                    }
                }
                
                br3.close();
            }catch(Exception e){
                System.out.println("Error opening acronym library.\n" +e);
                JOptionPane.showMessageDialog(null,"Error opening and reading acronym library");
                closed=true;
                setVisible(false);  
            }
            
            //allow table to be sortable
            jTable1.setAutoCreateRowSorter(true);
        
        
    }
    
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Acronym Library");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "Acronym", "Meaning"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setMinWidth(75);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(75);

        jButton1.setText("Save and Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
          
            //save currently editing entry in table
            if (jTable1.isEditing())
                jTable1.getCellEditor().stopCellEditing();
        
         //delete and save back to file with results from table
            File f=null;
            File f_temp=null;
        try{
            f=new File(System.getProperty("user.dir")+"\\"+"acronym_lib.txt");
            f_temp = new File(System.getProperty("user.dir")+"\\"+"acronym_lib_temp.txt");
            f.renameTo(f_temp);
            f.createNewFile();
            BufferedWriter bw2 = new BufferedWriter(new FileWriter(System.getProperty("user.dir")+"\\"+"acronym_lib.txt"));
            for(int i=0;i<jTable1.getRowCount();i++){
                String s1= (String)jTable1.getValueAt(i, 0);
                String s2= (String)jTable1.getValueAt(i, 1);
                bw2.write(s1+ ":"+s2);
                bw2.newLine();
            }
                
            
            bw2.close();
            f_temp.delete();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error saving acronym library.","",1);
            System.out.println("Error opening acronym library.\n" +ex);
            f_temp.renameTo(f);
        }
        
        //close window
        closed=true;
        setVisible(false);       
       
         
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
